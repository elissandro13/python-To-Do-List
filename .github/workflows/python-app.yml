name: CI - Testes Multiplataforma

# Quando o workflow serÃ¡ executado
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Testes - ${{ matrix.os }} - Python ${{ matrix.python-version }}
    
    # Matriz de sistemas operacionais e versÃµes do Python
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.11']
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout do cÃ³digo
      uses: actions/checkout@v4
    
    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Mostrar informaÃ§Ãµes do sistema
      run: |
        python --version
        pip --version
        echo "Sistema operacional: ${{ matrix.os }}"
        echo "VersÃ£o do Python: ${{ matrix.python-version }}"
    
    - name: Instalar dependÃªncias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Executar testes unitÃ¡rios
      run: |
        python -m unittest test_task_manager.py -v
    
    - name: Executar o programa principal
      run: |
        python task_manager.py
    
    - name: Verificar sintaxe Python
      run: |
        python -m py_compile task_manager.py
        python -m py_compile test_task_manager.py

  # Job adicional para mostrar informaÃ§Ãµes do build
  build-info:
    name: InformaÃ§Ãµes do Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Mostrar status do build
      run: |
        echo "âœ… Build executado com sucesso!"
        echo "ðŸ“… Data: $(date)"
        echo "ðŸ”— Link do workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
